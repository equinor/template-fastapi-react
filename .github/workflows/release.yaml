name: CI

on:
  push:
    branches: [ main, feature/changelogs ]
    paths-ignore:
    - 'CHANGELOG.md'
    - '.pre-commit-config.yaml'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository -y ppa:git-core/ppa
          apt-get install -y git

      # Checkout repository. By setting `fetch-depth: 0`, this fetch will include all history and tags
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Configure git identity with the user set in last log entrance
      - name: Configure Git identity
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git config --global core.autocrlf true
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/equinor/boilerplate-react-fastapi 

      - name: Install Precommit
        run: pip install pre-commit

      # Bump version with standard-version, remove prefixes from version tag
      - name: Bump version
        run: npx standard-version --tag-prefix=

      # - name: stage changed files
      #   run: git add .

      # Create a pull request from the changes
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: bump version and changelog'
          title: 'chore: update changelog'
          delete-branch: true
          # branch: ${{ github.ref }} # The branch where you commit
          # base: main # Don't forget to specify the right base branch here
          body: >
            This PR was auto-generated to create a changelog for new version

      # Set the new version number to an environment variable
      - name: Retrieve new version
        id: tag
        run: |
          echo "::set-output name=version::$(git describe HEAD)"

      # Creates a release
      # - name: Release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ steps.tag.outputs.version }}