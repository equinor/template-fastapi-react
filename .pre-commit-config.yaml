repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-ast
        language_version: python3.10
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: trailing-whitespace
        exclude: ^.*\.(lock)$||^docs\/
      - id: mixed-line-ending
        exclude: ^.*\.(lock)$||^docs\/
      - id: detect-private-key
        exclude: api/src/authentication/mock_token_generator.py

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v1.3.0
    hooks:
      - id: conventional-pre-commit
        always_run: true

  - repo: https://github.com/ambv/black
    rev: 22.3.0
    hooks:
      - id: black
        language_version: python3.10
        args: [--target-version, py310]
        files: ^api/src/.*\.py$

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: [-l, --recursive, -x, tests]
        files: ^api/.*\.py$

  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        language_version: python3.10
        types: [python]
        args: [--config=api/pyproject.toml]
        files: ^api/.*\.py$

  - repo: https://github.com/hadialqattan/pycln
    rev: v1.3.5
    hooks:
      - id: pycln
        args: [--config=api/pyproject.toml]

  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
        name: isort (python)
        files: ^api/.*\.py$

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.7.1
    hooks:
      - id: prettier
        files: ^web/src/.*\.(ts|tsx|js|css|html|json)$
        args:
          ["--config=web/.prettierrc.js", "--ignore-path=web/.prettierignore"]

  - repo: local
    hooks:
      - id: mypy
        name: Python type checking
        pass_filenames: false
        files: ^api/.*\.py$
        entry: sh -c "api/.venv/bin/python -m mypy --namespace-packages --ignore-missing-imports api/src/app.py"
        language: system

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: 'v8.18.0'
    hooks:
      - id: eslint
        additional_dependencies:
          - eslint
          - eslint-config-prettier # turns off all rules that might conflict with prettier
          - eslint-plugin-jsx-a11y # checks accessibility rules on jsx elements
          - eslint-plugin-prettier # runs prettier as an eslint rule
          - eslint-plugin-react # react specific linting rules
          - eslint-plugin-react-hooks # enforces the rules of hooks
        files: ^web/src/.*\.[jt]sx?$  # *.js, *.jsx, *.ts and *.tsx
        types: [file]
        args: ["--config=web/.eslintrc.json", "--ignore-path=web/.eslintignore"]

  - repo: https://gitlab.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        files: ^api/src/.*\.py$
        args: [ '--max-line-length=119', '--max-complexity=18', '--select=B,C,E,F,W,T4,B9', '--ignore=E203,E266,E501,W503' ]

# The path to the venv python interpreter differ between linux and windows. An if/else is used to find it on either.
  - repo: local
    hooks:
      - id: safety
        name: safety-check
        entry: sh -c "if [ -f api/.venv/bin/python ]; then var=api/.venv/bin/python; else var=api/.venv/Scripts/python; fi; $var -m safety check"
        language: system
      - id: mypy
        name: Python type checking
        pass_filenames: false
        files: ^api/.*\.py$
        entry: sh -c "if [ -f api/.venv/bin/python ]; then var=api/.venv/bin/python; else var=api/.venv/Scripts/python; fi; $var -m mypy --namespace-packages --ignore-missing-imports api/src/app.py"
        language: system
      - id: pytest
        name: pytest-check
        entry: sh -c "if [ -f api/.venv/bin/python ]; then var=api/.venv/bin/python; else var=api/.venv/Scripts/python; fi; $var -m pytest api/src/tests"
        language: system
        pass_filenames: false
        always_run: true
