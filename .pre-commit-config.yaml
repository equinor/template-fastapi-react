default_stages: [pre-commit]
default_install_hook_types: [pre-commit, commit-msg]
repos:
  - repo: local
    hooks:
      - id: generate-api-client
        name: generate-api
        entry: ./web/generate-api-typescript-client-pre-commit.sh
        language: system
        pass_filenames: false

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-ast
        language_version: python3.10
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: trailing-whitespace
        exclude: ^.*\.(lock)$||^docs\/
      - id: end-of-file-fixer
        exclude: ^.*\.(lock)$||^docs\/
      - id: mixed-line-ending
        exclude: ^.*\.(lock)$||^docs\/
      - id: detect-private-key
        exclude: api/src/authentication/mock_token_generator.py
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
        stages: [commit-msg]

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.3.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: "v0.0.253"
    hooks:
      - id: ruff
        name: Code linting
        files: ^api/.*\.py$
        args:
          - --fix

  - repo: https://github.com/ambv/black
    rev: 23.1.0
    hooks:
      - id: black
        name: Code formatting
        language_version: python3.10
        args: [--config=api/pyproject.toml]
        files: ^api/src/.*\.py$

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: [-l, --recursive, -x, tests]
        files: ^api/.*\.py$

  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        language_version: python3.10
        types: [python]
        args: [--config=api/pyproject.toml]
        files: ^api/.*\.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: Sort imports
        files: ^api/.*\.py$

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.2
    hooks:
      - id: prettier
        files: ^web/src/.*\.(ts|tsx|js|css|html|json)$
        args:
          ["--config=web/.prettierrc.js", "--ignore-path=web/.prettierignore"]

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: "v8.47.0"
    hooks:
      - id: eslint
        additional_dependencies:
          - eslint
          - typescript
          - "@typescript-eslint/parser"
          - "@typescript-eslint/eslint-plugin"
          - eslint-config-prettier # turns off all rules that might conflict with prettier
          - eslint-plugin-jsx-a11y # checks accessibility rules on jsx elements
          - eslint-plugin-prettier # runs prettier as an eslint rule
          - eslint-plugin-react # react specific linting rules
          - eslint-plugin-react-hooks # enforces the rules of hooks
        files: ^web/src/.*\.[jt]sx?$ # *.js, *.jsx, *.ts and *.tsx
        types: [file]
        args: ["--config=web/.eslintrc.json", "--ignore-path=web/.eslintignore"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.1
    hooks:
      - id: mypy
        name: Type checking
        args: [--config-file=api/pyproject.toml]
        exclude: tests/
        additional_dependencies:
          - types-cachetools
          - types-requests
          - types-ujson
          - types-toml

  # The path to the venv python interpreter differ between linux and windows. An if/else is used to find it on either.
  - repo: local
    hooks:
      - id: pytest
        name: pytest-check
        entry: sh -c "if [ -f api/.venv/bin/python ]; then var=api/.venv/bin/python; else var=api/.venv/Scripts/python; fi; $var -m pytest api/src/tests"
        language: system
        pass_filenames: false
        always_run: true

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.5
    hooks:
      - id: codespell
        name: codespell
        description: Checks for common misspellings in text files.
        entry: codespell --toml=api/pyproject.toml
        language: python
        types: [text]
        additional_dependencies:
          - tomli
