default_stages: [pre-commit]
default_install_hook_types: [pre-commit, commit-msg]
repos:
  - repo: local
    hooks:
      - id: generate-api-client
        name: generate-api
        entry: ./web/generate-api-typescript-client-pre-commit.sh
        language: system
        pass_filenames: false

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-ast
        language_version: python3.10
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: trailing-whitespace
        exclude: ^web/src/api/generated/|^.*\.(lock)$
      - id: end-of-file-fixer
        exclude: ^web/src/api/generated/|^.*\.(lock)$
      - id: mixed-line-ending
        exclude: ^.*\.(lock)$
      - id: detect-private-key
        exclude: api/tests/integration/mock_authentication.py
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
        stages: [commit-msg]

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.4.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: "v0.6.3"
    hooks:
      - id: ruff
        name: Python lint
        files: ^api/.*\.py$
        args: ["--fix"]

      - id: ruff-format
        name: Python format
        files: ^api/.*\.py$

  - repo: https://github.com/biomejs/pre-commit
    rev: v0.4.0
    hooks:
      - id: biome-check
        additional_dependencies: [ "@biomejs/biome@1.8.3" ]
        args: ["--config-path", "web"]


  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        name: Type checking
        args: [--config-file=api/pyproject.toml]
        exclude: tests/
        additional_dependencies:
          - types-cachetools
          - types-requests
          - types-ujson
          - types-toml
          - types-click
          - types-python-jose
          - pymongo
          - pydantic
          - fastapi

  # The path to the venv python interpreter differ between linux and windows. An if/else is used to find it on either.
  - repo: local
    hooks:
      - id: pytest
        name: pytest-check
        entry: sh -c "cd ./api/ && poetry run pytest ./tests/"
        language: system
        pass_filenames: false
        always_run: true

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.5
    hooks:
      - id: codespell
        name: codespell
        description: Checks for common misspellings in text files.
        entry: codespell --toml=api/pyproject.toml
        exclude: documentation/docs/changelog/changelog.md
        language: python
        types: [text]
        additional_dependencies:
          - tomli
