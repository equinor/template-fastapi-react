[tool.poetry]
name = "api"
version = "1.4.0"                              # x-release-please-version
description = "API for Template Fastapi React"
authors = []
license = ""
package-mode = false

[tool.poetry.dependencies]
cachetools = "^5.5.2"
python = "^3.12"
fastapi = { extras = ["standard"], version = "^0.115.12" }
pyjwt = "^2.8.0"
pymongo = "4.12.1"
certifi = "^2025.4.26"
httpx = "^0.28"
pydantic = "^2.11"
pydantic-settings = "^2.9"
pydantic-extra-types = "^2.10"
azure-monitor-opentelemetry = "^1.6.8"
opentelemetry-instrumentation-fastapi = "^0.52b1"
cryptography = "^44.0.2"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3"
pytest = "^8.3"
mongomock = "^4.1.2"
mypy = "^1.14.1"
types-cachetools = "^5.5.0.20240820"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
exclude = ["/tests/"]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
allow_subclassing_any = true

[tool.ruff]
src = ["src"]
target-version = "py312"
line-length = 119

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "S",  # flake8-bandit
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # automatically upgrade syntax for newer versions of the language
]
ignore = [
  "B904", # TODO: Within an except clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  "B008", # do not perform function calls in argument defaults. Ignored to allow dependencies in FastAPI
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "E402",
] # Ignore `E402` (import violations) in all `__init__.py` files
"src/tests/*" = ["S101"] # Allow the use of ´assert´ in tests

[tool.codespell]
skip = "*.lock,*.cjs"
ignore-words-list = "ignored-word"

[tool.pytest.ini_options]
# Makes pytest CLI discover markers and conftest settings:
markers = [
  "unit: mark a test as unit test.",
  "integration: mark a test as integration test.",
]
testpaths = ["src/tests/unit", "src/tests/integration"]
