"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[525],{4249:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"contribute/development-guide/coding/extending-the-api/adding-features/index","title":"Adding features","description":"A feature has this structure.","source":"@site/docs/contribute/development-guide/coding/extending-the-api/adding-features/index.md","sourceDirName":"contribute/development-guide/coding/extending-the-api/adding-features","slug":"/contribute/development-guide/coding/extending-the-api/adding-features/","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-features/","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/template-fastapi-react/tree/main/documentation/docs/contribute/development-guide/coding/extending-the-api/adding-features/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"contribute","previous":{"title":"Repositories","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-data-providers/repositories"},"next":{"title":"Controller","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-features/controllers"}}');var r=n(4848),o=n(8453),a=n(1028);const s='import click\nfrom fastapi import APIRouter, FastAPI, Security\nfrom starlette.middleware import Middleware\n\nfrom authentication.authentication import auth_with_jwt\nfrom common.middleware import LocalLoggerMiddleware\nfrom common.responses import responses\nfrom config import config\nfrom features.health_check import health_check_feature\nfrom features.todo import todo_feature\nfrom features.whoami import whoami_feature\n\ndescription_md = """\n### Description\nA RESTful API for handling todo items.\n\nAnyone in Equinor are authorized to use the API.\n * Click **Authorize** to login and start testing.\n\n### Resources\n * [Docs](https://equinor.github.io/template-fastapi-react/)\n * [Github](https://github.com/equinor/template-fastapi-react)\n\n For questions about usage or expanding the API, create issue on Github or see docs.\n"""\n\n\ndef create_app() -> FastAPI:\n    public_routes = APIRouter()\n    public_routes.include_router(health_check_feature.router)\n\n    authenticated_routes = APIRouter()\n    authenticated_routes.include_router(todo_feature.router)\n    authenticated_routes.include_router(whoami_feature.router)\n\n    middleware = [Middleware(LocalLoggerMiddleware)]\n\n    app = FastAPI(\n        title="Template FastAPI React",\n        version="1.4.0",  # x-release-please-version\n        description=description_md,\n        responses=responses,\n        middleware=middleware,\n        license_info={"name": "MIT", "url": "https://github.com/equinor/template-fastapi-react/blob/main/LICENSE.md"},\n        swagger_ui_init_oauth={\n            "clientId": config.OAUTH_CLIENT_ID,\n            "appName": "TemplateFastAPIReact",\n            "usePkceWithAuthorizationCodeGrant": True,\n            "scopes": config.OAUTH_AUTH_SCOPE,\n            "useBasicAuthenticationWithAccessCodeGrant": True,\n        },\n    )\n\n    if config.APPINSIGHTS_CONSTRING:\n        from azure.monitor.opentelemetry import configure_azure_monitor\n        from opentelemetry.instrumentation.fastapi import FastAPIInstrumentor\n\n        configure_azure_monitor(connection_string=config.APPINSIGHTS_CONSTRING, logger_name="API")\n        FastAPIInstrumentor.instrument_app(app, excluded_urls="healthcheck")\n\n    app.include_router(authenticated_routes, dependencies=[Security(auth_with_jwt)])\n    app.include_router(public_routes)\n\n    return app\n\n\n@click.group()\ndef cli() -> None:\n    pass\n\n\n@cli.command()\ndef run() -> None:\n    import uvicorn\n\n    uvicorn.run(\n        "app:create_app",\n        host="0.0.0.0",  # noqa:S104\n        port=5000,\n        factory=True,\n        reload=config.ENVIRONMENT == "local",\n        log_level=config.log_level,\n    )\n\n\nif __name__ == "__main__":\n    cli()  # run commands in cli() group\n',c={},d="Adding features",u={},p=[{value:"Register a feature",id:"register-a-feature",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"adding-features",children:"Adding features"})}),"\n",(0,r.jsx)(t.p,{children:"A feature has this structure."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\u251c\u2500\u2500 todo/\n\u2502   \u251c\u2500\u2500 use_cases/ - Application logic\n\u2502   \u251c\u2500\u2500 exceptions.py - Exceptions classes (optional)\n\u2502   \u2514\u2500\u2500 controller.py - The entrypoint\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,r.jsx)(t.p,{children:"Define endpoints in the controller that calls use cases that implements the application logic."}),"\n",(0,r.jsx)(t.h2,{id:"register-a-feature",children:"Register a feature"}),"\n",(0,r.jsx)(t.p,{children:"Import the router of the feature and include it to the app."}),"\n","\n","\n",(0,r.jsx)(a.A,{language:"jsx",children:s})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);