"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8944],{3686:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"contribute/development-guide/coding/extending-the-api/adding-features/use-cases","title":"Use cases","description":"Use cases implement and encapsulate all the application business rules.","source":"@site/docs/contribute/development-guide/coding/extending-the-api/adding-features/02-use-cases.md","sourceDirName":"contribute/development-guide/coding/extending-the-api/adding-features","slug":"/contribute/development-guide/coding/extending-the-api/adding-features/use-cases","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-features/use-cases","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/template-fastapi-react/tree/main/documentation/docs/contribute/development-guide/coding/extending-the-api/adding-features/02-use-cases.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"contribute","previous":{"title":"Controller","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-features/controllers"},"next":{"title":"Securing endpoints","permalink":"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-features/securing-endpoints"}}');var o=s(4848),i=s(8453),d=s(1028);const r='import uuid\n\nfrom pydantic import BaseModel, Field\n\nfrom features.todo.entities.todo_item import TodoItem\nfrom features.todo.repository.todo_repository_interface import TodoRepositoryInterface\n\n\nclass AddTodoRequest(BaseModel):\n    title: str = Field(\n        title="The title of the item",\n        max_length=300,\n        min_length=1,\n        json_schema_extra={\n            "examples": ["Read about clean architecture"],\n        },\n    )\n\n\nclass AddTodoResponse(BaseModel):\n    id: str = Field(\n        json_schema_extra={\n            "examples": ["vytxeTZskVKR7C7WgdSP3d"],\n        }\n    )\n    title: str = Field(\n        json_schema_extra={\n            "examples": ["Read about clean architecture"],\n        }\n    )\n    is_completed: bool = False\n\n    @staticmethod\n    def from_entity(todo_item: TodoItem) -> "AddTodoResponse":\n        return AddTodoResponse(id=todo_item.id, title=todo_item.title, is_completed=todo_item.is_completed)\n\n\ndef add_todo_use_case(\n    data: AddTodoRequest,\n    user_id: str,\n    todo_repository: TodoRepositoryInterface,\n) -> AddTodoResponse:\n    todo_item = TodoItem(id=str(uuid.uuid4()), title=data.title, user_id=user_id)\n    todo_repository.create(todo_item)\n    return AddTodoResponse.from_entity(todo_item)\n',a='import pytest\r\nfrom pydantic import ValidationError\r\n\r\nfrom features.todo.repository.todo_repository_interface import TodoRepositoryInterface\r\nfrom features.todo.use_cases.add_todo import AddTodoRequest, add_todo_use_case\r\n\r\n\r\ndef test_add_with_valid_title_should_return_todo(todo_repository: TodoRepositoryInterface):\r\n    data = AddTodoRequest(title="new todo")\r\n    result = add_todo_use_case(data, user_id="xyz", todo_repository=todo_repository)\r\n    assert result.title == data.title\r\n\r\n\r\ndef test_add_with_empty_title_should_throw_validation_error(todo_repository: TodoRepositoryInterface):\r\n    with pytest.raises(ValidationError):\r\n        data = AddTodoRequest(title="")\r\n        add_todo_use_case(data, user_id="xyz", todo_repository=todo_repository)\r\n',c={},l="Use cases",u={},p=[{value:"Testing use cases",id:"testing-use-cases",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"use-cases",children:"Use cases"})}),"\n",(0,o.jsx)(t.p,{children:"Use cases implement and encapsulate all the application business rules."}),"\n",(0,o.jsxs)(t.p,{children:["If the use case wants to access a database (infrastructure layer), then the use case will use a data provider interface. The ",(0,o.jsx)(t.code,{children:"add_todo_use_case"})," interacts with the infrastructure layer via ",(0,o.jsx)(t.code,{children:"TodoRepositoryInterface"}),"."]}),"\n","\n","\n",(0,o.jsx)(d.A,{language:"jsx",children:r}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Required"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Each use case needs to have its own read and write model to handle custom requests inputs and outputs for each use case."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"Optional"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["A ",(0,o.jsx)(t.a,{href:"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-data-providers/repository-interfaces",children:"repository interface"})," describing necessary repository methods.","\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["The use case uses ",(0,o.jsx)(t.a,{href:"/template-fastapi-react/docs/contribute/development-guide/coding/extending-the-api/adding-data-providers/repositories",children:"repositories"})," for reading and writing to external systems like databases."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsx)(t.p,{children:"Changes to use cases should not impact the entities."}),(0,o.jsx)(t.p,{children:"The use-case should only know of the repository interface (abstract class) before run-time. The concrete implementation of a repository is injected (dependency injection) into the use-case at run-time."})]}),"\n",(0,o.jsx)(t.h2,{id:"testing-use-cases",children:"Testing use cases"}),"\n",(0,o.jsxs)(t.p,{children:["Use the ",(0,o.jsx)(t.code,{children:"todo_repository"})," fixture as input to use_cases."]}),"\n","\n",(0,o.jsx)(d.A,{language:"jsx",children:a})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);