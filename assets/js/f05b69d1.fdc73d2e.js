"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4838],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6540);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},9796:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"about/concepts/task","title":"Task","description":"This is an example of a \\"concept\\" which is domain specific, and not related to your application. It should be replaced by relevant domain specific concepts in your documentation. Note that for some concepts, having an \\"Examples\\"-section does not make sense. Feel free to adapt the example\'s structure to best suit your concepts.","source":"@site/docs/about/concepts/01-task.md","sourceDirName":"about/concepts","slug":"/about/concepts/task","permalink":"/template-fastapi-react/docs/about/concepts/task","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/template-fastapi-react/tree/main/documentation/docs/about/concepts/01-task.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"about","previous":{"title":"Concepts","permalink":"/template-fastapi-react/docs/category/concepts"},"next":{"title":"Use case","permalink":"/template-fastapi-react/docs/about/concepts/use-case"}}');var o=n(4848),a=n(8453);const i={},c="Task",r={},l=[{value:"Examples",id:"examples",level:2},{value:"Related concepts",id:"related-concepts",level:2}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"task",children:"Task"})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:'This is an example of a "concept" which is domain specific, and not related to your application. It should be replaced by relevant domain specific concepts in your documentation. Note that for some concepts, having an "Examples"-section does not make sense. Feel free to adapt the example\'s structure to best suit your concepts.'})}),"\n",(0,o.jsx)(t.p,{children:"A task is piece of work which is assigned to be done by one or multiple persons. A task usually has defined limits, often referred to as the task description."}),"\n",(0,o.jsxs)(t.p,{children:["In order to remember assigned tasks, they are often made note of in lists. Traditionally, these lists have been written on small notes (e.g. post-its), but in recent years there have been a large number of todo-apps developed for phones and computers, replacing its analogue predecessor. See ",(0,o.jsx)(t.a,{href:"#related-concepts",children:"related concepts"})," for more on to-do lists."]}),"\n",(0,o.jsx)(t.p,{children:"Once a task is assigned to a person, the person is expected to carry out the task until completion. There is often a time-limit associated with a task, and a failure to complete the task within the time-limit might be unacceptable and as unfavorable as not completing the task at all."}),"\n",(0,o.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Many young children are given chores around the house, such as taking out the trash or cleaning their room."}),"\n",(0,o.jsx)(t.li,{children:"All employees have a set of tasks to complete, which are often defined in their contract or verbally during their training."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"related-concepts",children:"Related concepts"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/template-fastapi-react/docs/about/concepts/task",children:"To-do list"})," "]}),"\n",(0,o.jsx)(t.li,{children:"xxx"}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);